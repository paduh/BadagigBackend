{"version":3,"sources":["../../src/controller/category.js"],"names":["config","db","api","post","req","res","newCategory","submittedById","body","categoryTitle","categoryDescription","recommended","save","err","status","json","message","get","find","category","put","findById","params","id","delete","_id"],"mappings":"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","file":"category.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Category from '../model/category';\nimport bodyParser from 'body-parser';\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // /v1/category/add Create\n  api.post('/add', authenticate, (req, res) => {\n\n    let newCategory = new Category();\n    newCategory.submittedById = req.body.submittedById;\n    newCategory.categoryTitle = req.body.categoryTitle;\n    newCategory.categoryDescription = req.body.categoryDescription;\n    newCategory.recommended = req.body.recommended;\n\n\n    newCategory.save(err => {\n      if (err) {\n        res.status(500).json({message: err});\n        return;\n      }\n        res.status(200).json({message: 'Category saved successfully'});\n    });\n  });\n\n  // /v1/category/ Read\n  api.get('/', authenticate, (req, res) => {\n    Category.find({}, (err, category) => {\n      if (err) {\n        res.status(500).json({message: `An erro has occured ${err.message}`});\n        return;\n      }\n        res.status(200).json(category);\n    });\n  });\n\n  // /v1/category/:id Update\n  api.put('update/:id', authenticate, (req, res) => {\n    Category.findById(req.params.id, (err, category) => {\n      if (err) {\n        res.status(500).json({message: err});\n        return;\n      }\n        category.submittedById = req.body.submittedById;\n        category.categoryTitle = req.body.categoryTitle;\n        category.categoryDescription = req.body.categoryDescription;\n        category.recommended = req.body.recommended;\n\n        category.save(err => {\n          if (err) {\n            res.status(500).json({message: err});\n            return;\n          }\n            res.status(200).json({message: 'Category updated successfully'});\n      });\n    });\n  });\n\n  // /v1/category/:id Delete 1\n  api.delete('delete/:id', authenticate, (req, res) => {\n    Category.findById({_id: req.params.id}, (err, category) => {\n      if (err) {\n        res.status(500).json({message: err});\n        return;\n      }\n        res.status(200).json({message: 'Category deleted successfully'});\n    });\n  });\n\n\n  return api;\n}\n"]}