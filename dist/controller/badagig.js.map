{"version":3,"sources":["../../src/controller/badagig.js"],"names":["config","db","api","post","req","res","findById","params","id","err","subCategory","status","json","message","badaGigerId","user","newBadaGig","gigtitle","body","gigdescription","searchtags","subcategoryid","_id","badagigerid","deliveryduration","save","get","find","badaGid","badaGig","badagig","put","gigTitle","gigDescription","searchTags","deliveryDuration","delete","remove"],"mappings":"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","file":"badagig.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport BadaGig from '../model/badagig';\nimport User from '../model/user';\nimport SubCategory from '../model/subcategory';\nimport bodyParser from 'body-parser';\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  //v1/badagig/add Create\n  api.post('/add/bySubCategoryId/:id/byBadaGiger/:badaGigerId', authenticate, (req, res) => {\n    SubCategory.findById(req.params.id, (err, subCategory) => {\n      if (err) {\n          res.status(500).json({message: `An error has occured ${err. message}`});\n          return;\n      }\n      User.findById(req.params.badaGigerId, (err, user) => {\n        if (err) {\n            res.status(500).json({message: `An error has occured ${err. message}`});\n            return;\n        }\n        let newBadaGig = new BadaGig();\n        newBadaGig.gigtitle = req.body.gigtitle;\n        newBadaGig.gigdescription = req.body.gigdescription\n        newBadaGig.searchtags = req.body.searchtags;\n        newBadaGig.subcategoryid = subCategory._id;\n        newBadaGig.badagigerid = user._id;\n        newBadaGig.deliveryduration = req.body.deliveryduration;\n\n        newBadaGig.save(err => {\n          if (err) {\n            res.status(500).json({message: `An error has occured: ${err.message}`});\n            return;\n          }\n            res.status(200).json({message: 'BadaGig saved successfully'});\n        });\n    });\n  });\n});\n\n  // /v1/badagig/  Read All badagig\n  api.get('/', authenticate, (req, res) => {\n    BadaGig.find({}, (err, badaGid) => {\n      if (err) {\n        res.status(500).json({message: `An error has occured: ${err.message}`});\n        return;\n      }\n        res.status(200).json({message: badaGig});\n    });\n  });\n\n  // /v1/badagig/byUser/:badagigerId Read 1\n  api.get('/byUser/:badaGigerId', authenticate, (req, res) => {\n    BadaGig.find({badaGigerId: req.params.id}, (err, badagig) => {\n      if (err) {\n        res.status(500).json({message: `An error has occured: ${err.message}`});\n        return;\n      }\n        res.status(200).json(badaGig);\n    });\n  });\n\n  // /v1/badagig/:id Update\n  api.put('/:id', authenticate, (req, res) => {\n    BadaGig.findById(req.params.id, (err, badaGig) => {\n      if (err) {\n        res.status(500).json({message: `An error has occured: ${err.message}`});\n        return;\n      }\n        badaGig.gigTitle = req.body.gigTitle;\n        badaGig.gigDescription  =req.body.gigDescription;\n        badaGig.searchTags = req.body.searchTags;\n      //  badaGig.subCategory = req.body.subCategory;\n        badaGig.badaGigerId = req.body.badaGigerId;\n        badaGig.deliveryDuration = req.body.deliveryDuration;\n\n        badaGig.save(err => {\n          if (err) {\n            res.status(500).json({message: `An error has occured: ${err.message}`});\n            return;\n          }\n          res.status(200).json({message: 'BadaGig updated successfully'});\n      });\n    });\n  });\n\n  // /v1/badagig/:id Delete\n  api.delete('/:id', authenticate, (req, res) => {\n    BadaGig.findById(req.params.id, (err, badaGig) => {\n      if (err) {\n        res.status(500).json({message: `An error has occured ${err.message}`});\n        return;\n      }\n      badaGig.remove({_id: req.params.id}, (err, badaGig) => {\n        if (err) {\n          res.status(500).json({message: `An error has occured: ${err.message}`});\n          return;\n        }\n          res.status(200).json({message: 'BadaGig deleted successfully'});\n    });\n    });\n  });\n\n  return api;\n}\n"]}